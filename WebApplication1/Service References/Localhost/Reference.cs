//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApplication1.Localhost {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://localhost:8004/Service1.asmx", ConfigurationName="Localhost.Service1Soap")]
    public interface Service1Soap {
        
        // CODEGEN: Generating message contract since element name HelloWorldResult from namespace http://localhost:8004/Service1.asmx is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost:8004/Service1.asmx/HelloWorld", ReplyAction="*")]
        WebApplication1.Localhost.HelloWorldResponse HelloWorld(WebApplication1.Localhost.HelloWorldRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://localhost:8004/Service1.asmx/HelloWorld", ReplyAction="*")]
        System.IAsyncResult BeginHelloWorld(WebApplication1.Localhost.HelloWorldRequest request, System.AsyncCallback callback, object asyncState);
        
        WebApplication1.Localhost.HelloWorldResponse EndHelloWorld(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since element name JustSleep1MinResult from namespace http://localhost:8004/Service1.asmx is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost:8004/Service1.asmx/JustSleep1Min", ReplyAction="*")]
        WebApplication1.Localhost.JustSleep1MinResponse JustSleep1Min(WebApplication1.Localhost.JustSleep1MinRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://localhost:8004/Service1.asmx/JustSleep1Min", ReplyAction="*")]
        System.IAsyncResult BeginJustSleep1Min(WebApplication1.Localhost.JustSleep1MinRequest request, System.AsyncCallback callback, object asyncState);
        
        WebApplication1.Localhost.JustSleep1MinResponse EndJustSleep1Min(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since element name FlushAndSleep1MinResult from namespace http://localhost:8004/Service1.asmx is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost:8004/Service1.asmx/FlushAndSleep1Min", ReplyAction="*")]
        WebApplication1.Localhost.FlushAndSleep1MinResponse FlushAndSleep1Min(WebApplication1.Localhost.FlushAndSleep1MinRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://localhost:8004/Service1.asmx/FlushAndSleep1Min", ReplyAction="*")]
        System.IAsyncResult BeginFlushAndSleep1Min(WebApplication1.Localhost.FlushAndSleep1MinRequest request, System.AsyncCallback callback, object asyncState);
        
        WebApplication1.Localhost.FlushAndSleep1MinResponse EndFlushAndSleep1Min(System.IAsyncResult result);
        
        // CODEGEN: Generating message contract since element name NoFlushAndSleep1MinResult from namespace http://localhost:8004/Service1.asmx is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://localhost:8004/Service1.asmx/NoFlushAndSleep1Min", ReplyAction="*")]
        WebApplication1.Localhost.NoFlushAndSleep1MinResponse NoFlushAndSleep1Min(WebApplication1.Localhost.NoFlushAndSleep1MinRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://localhost:8004/Service1.asmx/NoFlushAndSleep1Min", ReplyAction="*")]
        System.IAsyncResult BeginNoFlushAndSleep1Min(WebApplication1.Localhost.NoFlushAndSleep1MinRequest request, System.AsyncCallback callback, object asyncState);
        
        WebApplication1.Localhost.NoFlushAndSleep1MinResponse EndNoFlushAndSleep1Min(System.IAsyncResult result);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class HelloWorldRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="HelloWorld", Namespace="http://localhost:8004/Service1.asmx", Order=0)]
        public WebApplication1.Localhost.HelloWorldRequestBody Body;
        
        public HelloWorldRequest() {
        }
        
        public HelloWorldRequest(WebApplication1.Localhost.HelloWorldRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class HelloWorldRequestBody {
        
        public HelloWorldRequestBody() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class HelloWorldResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="HelloWorldResponse", Namespace="http://localhost:8004/Service1.asmx", Order=0)]
        public WebApplication1.Localhost.HelloWorldResponseBody Body;
        
        public HelloWorldResponse() {
        }
        
        public HelloWorldResponse(WebApplication1.Localhost.HelloWorldResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://localhost:8004/Service1.asmx")]
    public partial class HelloWorldResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string HelloWorldResult;
        
        public HelloWorldResponseBody() {
        }
        
        public HelloWorldResponseBody(string HelloWorldResult) {
            this.HelloWorldResult = HelloWorldResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class JustSleep1MinRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="JustSleep1Min", Namespace="http://localhost:8004/Service1.asmx", Order=0)]
        public WebApplication1.Localhost.JustSleep1MinRequestBody Body;
        
        public JustSleep1MinRequest() {
        }
        
        public JustSleep1MinRequest(WebApplication1.Localhost.JustSleep1MinRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class JustSleep1MinRequestBody {
        
        public JustSleep1MinRequestBody() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class JustSleep1MinResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="JustSleep1MinResponse", Namespace="http://localhost:8004/Service1.asmx", Order=0)]
        public WebApplication1.Localhost.JustSleep1MinResponseBody Body;
        
        public JustSleep1MinResponse() {
        }
        
        public JustSleep1MinResponse(WebApplication1.Localhost.JustSleep1MinResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://localhost:8004/Service1.asmx")]
    public partial class JustSleep1MinResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string JustSleep1MinResult;
        
        public JustSleep1MinResponseBody() {
        }
        
        public JustSleep1MinResponseBody(string JustSleep1MinResult) {
            this.JustSleep1MinResult = JustSleep1MinResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class FlushAndSleep1MinRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="FlushAndSleep1Min", Namespace="http://localhost:8004/Service1.asmx", Order=0)]
        public WebApplication1.Localhost.FlushAndSleep1MinRequestBody Body;
        
        public FlushAndSleep1MinRequest() {
        }
        
        public FlushAndSleep1MinRequest(WebApplication1.Localhost.FlushAndSleep1MinRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class FlushAndSleep1MinRequestBody {
        
        public FlushAndSleep1MinRequestBody() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class FlushAndSleep1MinResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="FlushAndSleep1MinResponse", Namespace="http://localhost:8004/Service1.asmx", Order=0)]
        public WebApplication1.Localhost.FlushAndSleep1MinResponseBody Body;
        
        public FlushAndSleep1MinResponse() {
        }
        
        public FlushAndSleep1MinResponse(WebApplication1.Localhost.FlushAndSleep1MinResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://localhost:8004/Service1.asmx")]
    public partial class FlushAndSleep1MinResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string FlushAndSleep1MinResult;
        
        public FlushAndSleep1MinResponseBody() {
        }
        
        public FlushAndSleep1MinResponseBody(string FlushAndSleep1MinResult) {
            this.FlushAndSleep1MinResult = FlushAndSleep1MinResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class NoFlushAndSleep1MinRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="NoFlushAndSleep1Min", Namespace="http://localhost:8004/Service1.asmx", Order=0)]
        public WebApplication1.Localhost.NoFlushAndSleep1MinRequestBody Body;
        
        public NoFlushAndSleep1MinRequest() {
        }
        
        public NoFlushAndSleep1MinRequest(WebApplication1.Localhost.NoFlushAndSleep1MinRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute()]
    public partial class NoFlushAndSleep1MinRequestBody {
        
        public NoFlushAndSleep1MinRequestBody() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class NoFlushAndSleep1MinResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="NoFlushAndSleep1MinResponse", Namespace="http://localhost:8004/Service1.asmx", Order=0)]
        public WebApplication1.Localhost.NoFlushAndSleep1MinResponseBody Body;
        
        public NoFlushAndSleep1MinResponse() {
        }
        
        public NoFlushAndSleep1MinResponse(WebApplication1.Localhost.NoFlushAndSleep1MinResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://localhost:8004/Service1.asmx")]
    public partial class NoFlushAndSleep1MinResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string NoFlushAndSleep1MinResult;
        
        public NoFlushAndSleep1MinResponseBody() {
        }
        
        public NoFlushAndSleep1MinResponseBody(string NoFlushAndSleep1MinResult) {
            this.NoFlushAndSleep1MinResult = NoFlushAndSleep1MinResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface Service1SoapChannel : WebApplication1.Localhost.Service1Soap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class HelloWorldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public HelloWorldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class JustSleep1MinCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public JustSleep1MinCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FlushAndSleep1MinCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public FlushAndSleep1MinCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class NoFlushAndSleep1MinCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public NoFlushAndSleep1MinCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1SoapClient : System.ServiceModel.ClientBase<WebApplication1.Localhost.Service1Soap>, WebApplication1.Localhost.Service1Soap {
        
        private BeginOperationDelegate onBeginHelloWorldDelegate;
        
        private EndOperationDelegate onEndHelloWorldDelegate;
        
        private System.Threading.SendOrPostCallback onHelloWorldCompletedDelegate;
        
        private BeginOperationDelegate onBeginJustSleep1MinDelegate;
        
        private EndOperationDelegate onEndJustSleep1MinDelegate;
        
        private System.Threading.SendOrPostCallback onJustSleep1MinCompletedDelegate;
        
        private BeginOperationDelegate onBeginFlushAndSleep1MinDelegate;
        
        private EndOperationDelegate onEndFlushAndSleep1MinDelegate;
        
        private System.Threading.SendOrPostCallback onFlushAndSleep1MinCompletedDelegate;
        
        private BeginOperationDelegate onBeginNoFlushAndSleep1MinDelegate;
        
        private EndOperationDelegate onEndNoFlushAndSleep1MinDelegate;
        
        private System.Threading.SendOrPostCallback onNoFlushAndSleep1MinCompletedDelegate;
        
        public Service1SoapClient() {
        }
        
        public Service1SoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1SoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1SoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1SoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<HelloWorldCompletedEventArgs> HelloWorldCompleted;
        
        public event System.EventHandler<JustSleep1MinCompletedEventArgs> JustSleep1MinCompleted;
        
        public event System.EventHandler<FlushAndSleep1MinCompletedEventArgs> FlushAndSleep1MinCompleted;
        
        public event System.EventHandler<NoFlushAndSleep1MinCompletedEventArgs> NoFlushAndSleep1MinCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WebApplication1.Localhost.HelloWorldResponse WebApplication1.Localhost.Service1Soap.HelloWorld(WebApplication1.Localhost.HelloWorldRequest request) {
            return base.Channel.HelloWorld(request);
        }
        
        public string HelloWorld() {
            WebApplication1.Localhost.HelloWorldRequest inValue = new WebApplication1.Localhost.HelloWorldRequest();
            inValue.Body = new WebApplication1.Localhost.HelloWorldRequestBody();
            WebApplication1.Localhost.HelloWorldResponse retVal = ((WebApplication1.Localhost.Service1Soap)(this)).HelloWorld(inValue);
            return retVal.Body.HelloWorldResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WebApplication1.Localhost.Service1Soap.BeginHelloWorld(WebApplication1.Localhost.HelloWorldRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginHelloWorld(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginHelloWorld(System.AsyncCallback callback, object asyncState) {
            WebApplication1.Localhost.HelloWorldRequest inValue = new WebApplication1.Localhost.HelloWorldRequest();
            inValue.Body = new WebApplication1.Localhost.HelloWorldRequestBody();
            return ((WebApplication1.Localhost.Service1Soap)(this)).BeginHelloWorld(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WebApplication1.Localhost.HelloWorldResponse WebApplication1.Localhost.Service1Soap.EndHelloWorld(System.IAsyncResult result) {
            return base.Channel.EndHelloWorld(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndHelloWorld(System.IAsyncResult result) {
            WebApplication1.Localhost.HelloWorldResponse retVal = ((WebApplication1.Localhost.Service1Soap)(this)).EndHelloWorld(result);
            return retVal.Body.HelloWorldResult;
        }
        
        private System.IAsyncResult OnBeginHelloWorld(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginHelloWorld(callback, asyncState);
        }
        
        private object[] OnEndHelloWorld(System.IAsyncResult result) {
            string retVal = this.EndHelloWorld(result);
            return new object[] {
                    retVal};
        }
        
        private void OnHelloWorldCompleted(object state) {
            if ((this.HelloWorldCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.HelloWorldCompleted(this, new HelloWorldCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void HelloWorldAsync() {
            this.HelloWorldAsync(null);
        }
        
        public void HelloWorldAsync(object userState) {
            if ((this.onBeginHelloWorldDelegate == null)) {
                this.onBeginHelloWorldDelegate = new BeginOperationDelegate(this.OnBeginHelloWorld);
            }
            if ((this.onEndHelloWorldDelegate == null)) {
                this.onEndHelloWorldDelegate = new EndOperationDelegate(this.OnEndHelloWorld);
            }
            if ((this.onHelloWorldCompletedDelegate == null)) {
                this.onHelloWorldCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnHelloWorldCompleted);
            }
            base.InvokeAsync(this.onBeginHelloWorldDelegate, null, this.onEndHelloWorldDelegate, this.onHelloWorldCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WebApplication1.Localhost.JustSleep1MinResponse WebApplication1.Localhost.Service1Soap.JustSleep1Min(WebApplication1.Localhost.JustSleep1MinRequest request) {
            return base.Channel.JustSleep1Min(request);
        }
        
        public string JustSleep1Min() {
            WebApplication1.Localhost.JustSleep1MinRequest inValue = new WebApplication1.Localhost.JustSleep1MinRequest();
            inValue.Body = new WebApplication1.Localhost.JustSleep1MinRequestBody();
            WebApplication1.Localhost.JustSleep1MinResponse retVal = ((WebApplication1.Localhost.Service1Soap)(this)).JustSleep1Min(inValue);
            return retVal.Body.JustSleep1MinResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WebApplication1.Localhost.Service1Soap.BeginJustSleep1Min(WebApplication1.Localhost.JustSleep1MinRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginJustSleep1Min(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginJustSleep1Min(System.AsyncCallback callback, object asyncState) {
            WebApplication1.Localhost.JustSleep1MinRequest inValue = new WebApplication1.Localhost.JustSleep1MinRequest();
            inValue.Body = new WebApplication1.Localhost.JustSleep1MinRequestBody();
            return ((WebApplication1.Localhost.Service1Soap)(this)).BeginJustSleep1Min(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WebApplication1.Localhost.JustSleep1MinResponse WebApplication1.Localhost.Service1Soap.EndJustSleep1Min(System.IAsyncResult result) {
            return base.Channel.EndJustSleep1Min(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndJustSleep1Min(System.IAsyncResult result) {
            WebApplication1.Localhost.JustSleep1MinResponse retVal = ((WebApplication1.Localhost.Service1Soap)(this)).EndJustSleep1Min(result);
            return retVal.Body.JustSleep1MinResult;
        }
        
        private System.IAsyncResult OnBeginJustSleep1Min(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginJustSleep1Min(callback, asyncState);
        }
        
        private object[] OnEndJustSleep1Min(System.IAsyncResult result) {
            string retVal = this.EndJustSleep1Min(result);
            return new object[] {
                    retVal};
        }
        
        private void OnJustSleep1MinCompleted(object state) {
            if ((this.JustSleep1MinCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.JustSleep1MinCompleted(this, new JustSleep1MinCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void JustSleep1MinAsync() {
            this.JustSleep1MinAsync(null);
        }
        
        public void JustSleep1MinAsync(object userState) {
            if ((this.onBeginJustSleep1MinDelegate == null)) {
                this.onBeginJustSleep1MinDelegate = new BeginOperationDelegate(this.OnBeginJustSleep1Min);
            }
            if ((this.onEndJustSleep1MinDelegate == null)) {
                this.onEndJustSleep1MinDelegate = new EndOperationDelegate(this.OnEndJustSleep1Min);
            }
            if ((this.onJustSleep1MinCompletedDelegate == null)) {
                this.onJustSleep1MinCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnJustSleep1MinCompleted);
            }
            base.InvokeAsync(this.onBeginJustSleep1MinDelegate, null, this.onEndJustSleep1MinDelegate, this.onJustSleep1MinCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WebApplication1.Localhost.FlushAndSleep1MinResponse WebApplication1.Localhost.Service1Soap.FlushAndSleep1Min(WebApplication1.Localhost.FlushAndSleep1MinRequest request) {
            return base.Channel.FlushAndSleep1Min(request);
        }
        
        public string FlushAndSleep1Min() {
            WebApplication1.Localhost.FlushAndSleep1MinRequest inValue = new WebApplication1.Localhost.FlushAndSleep1MinRequest();
            inValue.Body = new WebApplication1.Localhost.FlushAndSleep1MinRequestBody();
            WebApplication1.Localhost.FlushAndSleep1MinResponse retVal = ((WebApplication1.Localhost.Service1Soap)(this)).FlushAndSleep1Min(inValue);
            return retVal.Body.FlushAndSleep1MinResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WebApplication1.Localhost.Service1Soap.BeginFlushAndSleep1Min(WebApplication1.Localhost.FlushAndSleep1MinRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginFlushAndSleep1Min(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginFlushAndSleep1Min(System.AsyncCallback callback, object asyncState) {
            WebApplication1.Localhost.FlushAndSleep1MinRequest inValue = new WebApplication1.Localhost.FlushAndSleep1MinRequest();
            inValue.Body = new WebApplication1.Localhost.FlushAndSleep1MinRequestBody();
            return ((WebApplication1.Localhost.Service1Soap)(this)).BeginFlushAndSleep1Min(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WebApplication1.Localhost.FlushAndSleep1MinResponse WebApplication1.Localhost.Service1Soap.EndFlushAndSleep1Min(System.IAsyncResult result) {
            return base.Channel.EndFlushAndSleep1Min(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndFlushAndSleep1Min(System.IAsyncResult result) {
            WebApplication1.Localhost.FlushAndSleep1MinResponse retVal = ((WebApplication1.Localhost.Service1Soap)(this)).EndFlushAndSleep1Min(result);
            return retVal.Body.FlushAndSleep1MinResult;
        }
        
        private System.IAsyncResult OnBeginFlushAndSleep1Min(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginFlushAndSleep1Min(callback, asyncState);
        }
        
        private object[] OnEndFlushAndSleep1Min(System.IAsyncResult result) {
            string retVal = this.EndFlushAndSleep1Min(result);
            return new object[] {
                    retVal};
        }
        
        private void OnFlushAndSleep1MinCompleted(object state) {
            if ((this.FlushAndSleep1MinCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.FlushAndSleep1MinCompleted(this, new FlushAndSleep1MinCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void FlushAndSleep1MinAsync() {
            this.FlushAndSleep1MinAsync(null);
        }
        
        public void FlushAndSleep1MinAsync(object userState) {
            if ((this.onBeginFlushAndSleep1MinDelegate == null)) {
                this.onBeginFlushAndSleep1MinDelegate = new BeginOperationDelegate(this.OnBeginFlushAndSleep1Min);
            }
            if ((this.onEndFlushAndSleep1MinDelegate == null)) {
                this.onEndFlushAndSleep1MinDelegate = new EndOperationDelegate(this.OnEndFlushAndSleep1Min);
            }
            if ((this.onFlushAndSleep1MinCompletedDelegate == null)) {
                this.onFlushAndSleep1MinCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnFlushAndSleep1MinCompleted);
            }
            base.InvokeAsync(this.onBeginFlushAndSleep1MinDelegate, null, this.onEndFlushAndSleep1MinDelegate, this.onFlushAndSleep1MinCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WebApplication1.Localhost.NoFlushAndSleep1MinResponse WebApplication1.Localhost.Service1Soap.NoFlushAndSleep1Min(WebApplication1.Localhost.NoFlushAndSleep1MinRequest request) {
            return base.Channel.NoFlushAndSleep1Min(request);
        }
        
        public string NoFlushAndSleep1Min() {
            WebApplication1.Localhost.NoFlushAndSleep1MinRequest inValue = new WebApplication1.Localhost.NoFlushAndSleep1MinRequest();
            inValue.Body = new WebApplication1.Localhost.NoFlushAndSleep1MinRequestBody();
            WebApplication1.Localhost.NoFlushAndSleep1MinResponse retVal = ((WebApplication1.Localhost.Service1Soap)(this)).NoFlushAndSleep1Min(inValue);
            return retVal.Body.NoFlushAndSleep1MinResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WebApplication1.Localhost.Service1Soap.BeginNoFlushAndSleep1Min(WebApplication1.Localhost.NoFlushAndSleep1MinRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginNoFlushAndSleep1Min(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginNoFlushAndSleep1Min(System.AsyncCallback callback, object asyncState) {
            WebApplication1.Localhost.NoFlushAndSleep1MinRequest inValue = new WebApplication1.Localhost.NoFlushAndSleep1MinRequest();
            inValue.Body = new WebApplication1.Localhost.NoFlushAndSleep1MinRequestBody();
            return ((WebApplication1.Localhost.Service1Soap)(this)).BeginNoFlushAndSleep1Min(inValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        WebApplication1.Localhost.NoFlushAndSleep1MinResponse WebApplication1.Localhost.Service1Soap.EndNoFlushAndSleep1Min(System.IAsyncResult result) {
            return base.Channel.EndNoFlushAndSleep1Min(result);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndNoFlushAndSleep1Min(System.IAsyncResult result) {
            WebApplication1.Localhost.NoFlushAndSleep1MinResponse retVal = ((WebApplication1.Localhost.Service1Soap)(this)).EndNoFlushAndSleep1Min(result);
            return retVal.Body.NoFlushAndSleep1MinResult;
        }
        
        private System.IAsyncResult OnBeginNoFlushAndSleep1Min(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginNoFlushAndSleep1Min(callback, asyncState);
        }
        
        private object[] OnEndNoFlushAndSleep1Min(System.IAsyncResult result) {
            string retVal = this.EndNoFlushAndSleep1Min(result);
            return new object[] {
                    retVal};
        }
        
        private void OnNoFlushAndSleep1MinCompleted(object state) {
            if ((this.NoFlushAndSleep1MinCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.NoFlushAndSleep1MinCompleted(this, new NoFlushAndSleep1MinCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void NoFlushAndSleep1MinAsync() {
            this.NoFlushAndSleep1MinAsync(null);
        }
        
        public void NoFlushAndSleep1MinAsync(object userState) {
            if ((this.onBeginNoFlushAndSleep1MinDelegate == null)) {
                this.onBeginNoFlushAndSleep1MinDelegate = new BeginOperationDelegate(this.OnBeginNoFlushAndSleep1Min);
            }
            if ((this.onEndNoFlushAndSleep1MinDelegate == null)) {
                this.onEndNoFlushAndSleep1MinDelegate = new EndOperationDelegate(this.OnEndNoFlushAndSleep1Min);
            }
            if ((this.onNoFlushAndSleep1MinCompletedDelegate == null)) {
                this.onNoFlushAndSleep1MinCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnNoFlushAndSleep1MinCompleted);
            }
            base.InvokeAsync(this.onBeginNoFlushAndSleep1MinDelegate, null, this.onEndNoFlushAndSleep1MinDelegate, this.onNoFlushAndSleep1MinCompletedDelegate, userState);
        }
    }
}
